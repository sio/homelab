---
- hosts: all
  name: verify
  become: yes
  tasks:
    - name: hello world
      command: echo hello
      register: hello
      failed_when: "'hello' not in hello.stdout"
      changed_when: "hello is not succeeded"

    - name: ping
      ping:

    - name: gather libvirt machine names
      virt:
        command: list_vms
      register: libvirt

    - name: show existing virtual machines
      debug:
        var: libvirt.list_vms

    - name: check that guest is running
      virt:
        command: list_vms
        state: running
      register: running
      failed_when: "'guest0' not in running.list_vms"

    - name: wait for dnsmasq lease file
      delegate_to: localhost
      become: no
      find:
        paths: /var/lib/libvirt/dnsmasq
        patterns: '*.status'
      register: find
      until: find.matched > 0
      retries: 60
      delay: 1

    - name: show dnsmasq lease file
      debug:
        msg: '{{ lookup("file", (find.files|last).path) }}'

    - name: wait for dnsmasq lease to be issued
      delegate_to: localhost
      become: no
      wait_for:
        path: '{{ (find.files|last).path }}'
        search_regex: 'cloud-instance-{{ inventory_hostname }}'
        timeout: 60

    - name: read dnsmasq lease
      delegate_to: localhost
      become: no
      set_fact:
        guest_leases: '{{ guest_leases }}'
      vars:
        leases_path: '{{ (find.files|last).path }}'
        leases: '{{ lookup("file", leases_path )|from_json }}'
        guest_leases: '{{ leases|sort(attribute="expiry-time")|selectattr("hostname","equalto","cloud-instance-"+inventory_hostname) }}'

    - name: read dnsmasq leases on molecule host
      set_fact:
        guest_lease: '{{ guest_leases|last }}'

    - name: show DHCP lease as detected
      debug:
        var: guest_lease

    - name: check that DHCP lease detection was successful
      assert:
        that:
          - ('hostname' in guest_lease)
          - guest_lease['mac-address'].startswith('02:34:56')

    - name: wait for HTTP server on VM to become available
      wait_for:
        host: '{{ guest_lease["ip-address"] }}'
        port: 80
        timeout: 120
