#
# Define kernel parameters in Grub defaults file and update Grub configuration
# if needed
#
# Required kernel parameters must be defined in `grub_kernel_params` variable.
# Example:
#   grub_kernel_params:
#     - zswap.enabled=1
#     - quiet
#     - splash
#
---

- import_tasks: assert.yml

- name: straighten all escaped line breaks
  replace:
    name: '{{ grub_defaults }}'
    regexp: '\\\n'

- name: check that kernel parameters are defined
  check_mode: yes
  changed_when: false
  lineinfile:
    name: '{{ grub_defaults }}'
    regexp: (^\s*{{ grub_kernel_line }}.*[\"\'].*[\"\']\s*$)
    line: '\1'
  register: grub_has_kernel_params

- name: read grub defaults file
  slurp:
    src: '{{ grub_defaults }}'
  register: grub_defaults_copy

- name: count kernel parameters lines  # requires Jinja 2.11 (trim)
  set_fact:
    grub_kernel_params_definitions: >-
      {{
      (grub_defaults_copy.content|b64decode)
      .splitlines()
      |select("match", "\s*"+grub_kernel_line)
      |map("regex_replace", "^[^=]*=\s*(.*)\s*$", "\1")
      |map("trim", "'")
      |map("trim", '"')
      |list
      }}

- name: remove duplicated kernel parameters definition
  replace:
    path: '{{ grub_defaults }}'
    regexp: (^\s*{{ grub_kernel_line }}.*[\"\'].*[\"\']\s*$)
    backup: yes
  when: grub_kernel_params_definitions|count > 1

- name: add kernel parameters line (combine duplicates)
  lineinfile:
    name: '{{ grub_defaults }}'
    line: '{{ grub_kernel_line }}="{{ " ".join(grub_kernel_params_definitions) }}"'
  when: grub_kernel_params_definitions|count > 1

- name: add kernel parameters line (empty parameters)
  lineinfile:
    name: '{{ grub_defaults }}'
    line: '{{ grub_kernel_line }}=""'
  when: grub_has_kernel_params.msg == 'line added'

- name: set linux kernel parameters
  lineinfile:
    name: '{{ grub_defaults }}'
    backrefs: yes
    backup: yes
    regexp: ^\s*({{ grub_kernel_line }}(?!.*\b{{  item }}\b).*)([\"\']\s*)$
    line: '\1 {{ item }}\2'
  with_items: '{{ grub_kernel_params }}'
  notify: update grub

  # NOTE:
  # If the same parameter is passed to the kernel twice, the last value is
  # used.  That means we don't have to clean up old values in this task, just
  # save the new ones!

- name: configure other environment variables for grub-mkconfig
  loop: '{{ grub_variables|dict2items }}'
  loop_control:
    label: '{{ item.key }}'
  lineinfile:
    path: '{{ grub_defaults }}'
    regexp: '^\s*{{ item.key }}\s*='
    line: '{{ item.key }}="{{ item.value }}"'
    backup: yes
  notify: update grub
