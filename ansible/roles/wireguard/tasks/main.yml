---

- name: enable backports repo
  apt_repository:
    repo: 'deb http://deb.debian.org/debian {{ ansible_distribution_release }}-backports main'
    state: present
    mode: '0600'
  when: ansible_distribution_release == 'buster'

- name: install VPN packages
  package:
    name: wireguard
    state: present

- name: create required directories
  file:
    path: '{{ item }}'
    state: directory
  loop:
    - '{{ wireguard_config_dir }}'
    - /etc/systemd/system/wg-quick@.service.d

- name: create private and public keys
  shell:
    cmd: >
      set -o pipefail;
      umask 077;
      wg genkey | tee {{ wireguard_config_private_key|quote }} | wg pubkey > {{ wireguard_config_public_key|quote }}
    executable: /bin/bash
    creates: '{{ wireguard_config_public_key }}'

- name: read public key
  slurp:
    src: '{{ wireguard_config_public_key }}'
  register: wireguard_public_key

- name: show public key
  debug:
    msg: '{{ wireguard_public_key.content|b64decode|trim }}'

- name: read private key
  slurp:
    src: '{{ wireguard_config_private_key }}'
  register: wireguard_private_key

- name: write down the name of LAN interface
  copy:
    content: '{{ ansible_default_ipv4.interface }}'
    dest: '{{ wireguard_config_dir }}/lan_interface'
    force: no
    mode: '0600'

- name: read the name of LAN interface
  slurp:
    src: '{{ wireguard_config_dir }}/lan_interface'
  register: wireguard_lan_interface

- name: configure VPN interface
  template:
    src: 'templates/{{ wireguard_role }}.conf'
    dest: '{{ wireguard_config_interface }}'
    mode: '0600'
    backup: yes
  notify: restart wireguard

- name: restart VPN interface on failure
  copy:
    content: |
      [Service]
      Type=simple
      Restart=on-failure
      RestartSec=60
    dest: /etc/systemd/system/wg-quick@.service.d/restart.conf
    backup: yes
    mode: '0600'
  notify: restart wireguard

- name: start VPN interface
  service:
    name: 'wg-quick@{{ wireguard_interface }}'
    state: started
    enabled: yes

- name: modify firewall rules
  ufw:
    port: '{{ wireguard_port }}'
    proto: udp
    rule: allow
  when: wireguard_is_server and not wireguard_skip_firewall|default(False)

- name: enable IP forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    reload: yes
  when: wireguard_enable_ip_forward

- meta: flush_handlers  # handlers may no be the same for multiple invocations of this role
