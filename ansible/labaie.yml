---
# Host specific extras, see lab.yml for generic setup


- name: wake up the machine
  import_playbook: wakeup.yml
  vars:
    limit_hosts: labaie


- hosts: labaie
  become: yes
  roles:
    - role: packages
      packages_install: '{{ baremetal_packages }}'


- hosts: labaie
  become: yes
  roles:
    - role: kvm_bridge  # Must be the only role in this play
                        # Otherwise ssh connection might get broken while running handlers


- hosts: labaie
  become: yes

  vars:
    vm_image: /win10-playground.qcow2
    vm_base: /home/op/.common/packer/windows10/output/windows10-image.qcow2

  pre_tasks:
    - name: create base windows10 image
      command:
        cmd: make build
        chdir: /home/op/.common/packer/windows10
        creates: '{{ vm_base }}'
      environment:
        VM_ISO: '{{ lookup("env", "VM_ISO") }}'
        VM_HOSTNAME: windows10
        VM_PASSWORD: '{{ lookup("env", "VM_PASSWORD") }}'

    - name: derive vm image from base
      command:
        cmd: >
          qemu-img create
          -f qcow2
          -F qcow2
          -b {{ vm_base|quote }}
          {{ vm_image|quote }}
        creates: '{{ vm_image }}'

    - name: change ownership of vm image
      file:
        path: '{{ vm_image }}'
        mode: '0600'
        owner: libvirt-qemu
        group: libvirt-qemu

    - name: relax apparmor restrictions for qemu
      copy:
        content: |
          #include <tunables/global>
          profile LIBVIRT_TEMPLATE flags=(attach_disconnected) {
            #include <abstractions/libvirt-qemu>
            /**.qcow2 rwk,
          }
        dest: /etc/apparmor.d/libvirt/TEMPLATE.qemu
        backup: yes
        mode: '0644'

  roles:
    - role: virtual_machine
      virtual_machine_name: windows10
      virtual_machine_memory: 4096
      virtual_machine_cpus: 2
      virtual_machine_image: '{{ vm_image }}'
      virtual_machine_image_url: 'null'


- hosts: labaie
  become: yes
  vars:
    virtual_machine_image: '/vm/{{ virtual_machine_name }}.qcow2'
    virtual_machine_image_url: '{{ vm_image_debian10 }}'
    virtual_machine_image_checksum: 'sha256:{{ vm_image_debian10_checksum }}'
  roles:
    - role: virtual_machine
      virtual_machine_name: test-debian
      virtual_machine_memory: 600 # MiB
