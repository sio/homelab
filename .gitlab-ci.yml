.docker-build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  variables:
    CI_REGISTRY_USER: potyarkin
    CI_REGISTRY: docker.io
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build --pull -t "$CI_REGISTRY_IMAGE" - < "$DOCKERFILE"  # no build context
    - docker push "$CI_REGISTRY_IMAGE"


.test-ansible-role:
  stage: test
  image: potyarkin/molecule:host
  services:
    - docker:dind
  script:
    - cd ansible/tests && make test
  cache:
    paths:
      - "$CI_PROJECT_DIR/cache"
    key:
      prefix: molecule-venv
      files:
        - ansible/tests/requirements.txt
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/cache/pip"
    VENVDIR: "$CI_PROJECT_DIR/cache/venv"


.push-to-master: &push-to-master
  if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_NAME == "master"'
  when: always


.trigger-docker-build: &trigger-docker-build
  if: '$TRIGGER_DOCKER_BUILD'
  when: always


molecule-host-alpine:
  extends: .docker-build
  variables:
    DOCKERFILE: ansible/tests/Dockerfile.host
    CI_REGISTRY_IMAGE: potyarkin/molecule:host
  rules:
    - *trigger-docker-build
    - <<: *push-to-master
      changes:
        - ansible/tests/Dockerfile.host


molecule-guest-debian-10:
  extends: .docker-build
  variables:
    DOCKERFILE: ansible/tests/Dockerfile.debian-10
    CI_REGISTRY_IMAGE: potyarkin/molecule:debian-10
  rules:
    - *trigger-docker-build
    - <<: *push-to-master
      changes:
        - ansible/tests/Dockerfile.debian-10


test-role-motd:
  extends: .test-ansible-role
  variables:
    ANSIBLE_ROLE: ../roles/motd
  rules:
    - changes:
        - ansible/roles/motd/**/*
