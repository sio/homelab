"
"
" This config was copied from Git for Windows
"
"

" Setting some decent VIM settings for programming

set ai                          " set auto-indenting on for programming
set showmatch                   " automatically show matching brackets. works like it does in bbedit.
set vb                          " turn on the "visual bell" - which is much quieter than the "audio blink"
set ruler                       " show the cursor position all the time
set laststatus=2                " make the last line where the status is two lines deep so you can see status always
set backspace=indent,eol,start  " make that backspace key work the way it should
set nocompatible                " vi compatible is LAME
set background=dark             " Use colours that work well on a dark background (Console is usually black)
set showmode                    " show the current mode
set clipboard=unnamed           " set clipboard to unnamed to access the system clipboard under windows
syntax on                       " turn syntax highlighting on by default

" Show EOL type and last modified timestamp, right after the filename
set statusline=%<%F%h%m%r\ [%{&ff}]\ (%{strftime(\"%H:%M\ %d/%m/%Y\",getftime(expand(\"%:p\")))})%=%l,%c%V\ %P

"------------------------------------------------------------------------------
" Only do this part when compiled with support for autocommands.
if has("autocmd")
    "Set UTF-8 as the default encoding for commit messages
    autocmd BufReadPre COMMIT_EDITMSG,git-rebase-todo setlocal fileencodings=utf-8

    "Remember the positions in files with some git-specific exceptions"
    autocmd BufReadPost *
      \ if line("'\"") > 0 && line("'\"") <= line("$")
      \           && expand("%") !~ "COMMIT_EDITMSG"
      \           && expand("%") !~ "ADD_EDIT.patch"
      \           && expand("%") !~ "addp-hunk-edit.diff"
      \           && expand("%") !~ "git-rebase-todo" |
      \   exe "normal g`\"" |
      \ endif

      autocmd BufNewFile,BufRead *.patch set filetype=diff
      autocmd BufNewFile,BufRead *.diff set filetype=diff

      autocmd Syntax diff
      \ highlight WhiteSpaceEOL ctermbg=red |
      \ match WhiteSpaceEOL /\(^+.*\)\@<=\s\+$/

      autocmd Syntax gitcommit setlocal textwidth=74
endif " has("autocmd")


"
"
" My configuration goes below
"
"

" Indent with spaces
set tabstop=4      " show tabs as 4 spaces
set shiftwidth=4   " when indenting with > use spaces
set expandtab      " insert spaces on Tab keypress
set softtabstop=4  " backspace deletes 4 spaces if present
autocmd Filetype make setlocal noexpandtab " Makefile requires Tab indentation

" yaml indentation
au FileType yaml setlocal tabstop=2 shiftwidth=2 softtabstop=2

" Do not write trailing whitespace
autocmd BufWritePre * :%s/\s\+$//e

" Automatically continue comment blocks
set formatoptions+=cro

" Highlight search matches (use :noh or :nohlsearch to clear marks)
set hlsearch

" Comfortable search
set ignorecase
set smartcase
set scrolloff=5
set incsearch

" Smart Home key
" http://vim.wikia.com/wiki/Smart_home
function! SmartHome()
  let first_nonblank = match(getline('.'), '\S') + 1
  if first_nonblank == 0
    return col('.') + 1 >= col('$') ? '0' : '^'
  endif
  if col('.') == first_nonblank
    return '0'  " if at first nonblank, go to start line
  endif
  return &wrap && wincol() > 1 ? 'g^' : '^'
endfunction
noremap <expr> <silent> <Home> SmartHome()
imap <silent> <Home> <C-O><Home>

" Familiar arrow behavior when line wrapping is enabled
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <Down> gj
nnoremap <Up> gk
vnoremap <Down> gj
vnoremap <Up> gk
inoremap <Down> <C-o>gj
inoremap <Up> <C-o>gk

" Break lines by words instead of characters
set linebreak

" Deal with russian keymap in normal mode
set langmap=ФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯ;ABCDEFGHIJKLMNOPQRSTUVWXYZ,фисвуапршолдьтщзйкыегмцчня;abcdefghijklmnopqrstuvwxyz

" The following lines require changing layout with Ctrl-6. Inconvenient, but works.
set keymap=russian-jcukenwin
set iminsert=0
set imsearch=0

" Enable syntax highlighting for Power Query
autocmd BufNewFile,BufRead *.pq set filetype=javascript
autocmd BufNewFile,BufRead *.m set filetype=javascript

" Enable cursor movement with mouse clicks
set mouse=a

" Use system clipboard by default
" (requires vim-gtk, use vim --version | grep clipboard to check for support)
"set clipboard=unnamedplus  " disabled because this causes issues with vim's usual copy-paste
