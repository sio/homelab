#
# Build a pretty prompt for bash
#
# To invoke add `source bash_prompt` to your ~/.bashrc
#


_color() {
    # Build colored prompt components with proper escape sequences
    #
    # Usage:
    #     color code text
    # code
    #     Color code, e.g. "1;34m"
    # text
    #     String to be colored
    #
    # ASCII colors (foreground: 30-37, background: 40-47)
    #   0: black,   1: red,       2: green,    3: yellow,
    #   4: blue,    5: magenta,   6: cyan,     7: white
    #
    # Note: \[ and \] are important for shell to properly calculate
    # length of the prompt. Otherwise there might be some garbage
    # left after some interactive operations, e.g. reverse-history-search.

    local start='\[\033['
    local end='\]'
    local revert='\[\033[0m\]'

    local color="$1"
    local value="$2"
    if [ ! -z "$value" ]
    then
        echo -n "$start$color$end$value$revert"
    fi
}


_usercolor() {
    # Return a color code for each user
    #
    # Generated from username and hostname, always red for root

    local user=$(id -u -n)
    if [ "x$user" = "xroot" ]
    then
        local color=1
    else
        local host=$(hostname)
        local color=$(_colorhash "$user@$host")
    fi
    echo -n $color
}


_colorhash() {
    # Reduce a string to a color code. Black, white and red
    # are considered reserved and are never returned.
    #
    # Usage:
    #   _colorhash text

    local number=5  # available colors: green, yellow, blue, magenta, cyan
    local hash=$(echo "$*" | sum -s | cut -d\  -f1)
    echo -n $(($hash % $number + 2))
}


_git_current_branch() {
    local branch=$(git branch 2>/dev/null)
    [ ! -z "$branch" ] && branch=$(echo "$branch"| cut -d\  -f2 | xargs)
    [ ! -z "$branch" ] && echo -n " ($branch)"
}


_exit_code() {
    local exit="$?"
    if [ ! "$exit" -eq 0 ]
    then
        echo -ne "Exit code: $exit\n\r"
    fi
}


_nested_level() {
    if [ "$_NESTED_LEVEL" -gt 1 ]
    then
        echo -ne " ($_NESTED_LEVEL)"
    fi
}


_makeprompt() {
    local usrclr=$(_usercolor)

    local newlines='\n\n'
    local who=$(_color "1;3${usrclr}m" '[\u@\h]')
    local trailing_slash='`[ ${#PWD} -gt 1 ] && echo -n /`'
    local path=$(_color "32m" '$PWD'"$trailing_slash")
    local bang=$(_color "1;3${usrclr}m" '\$ ')
    local gitbranch=$(_color "33m" '`_git_current_branch`')
    local exitcode=$(_color "31m" '`_exit_code`')
    local level=$(_color '34m' "$(_nested_level)")
    echo -n "$exitcode$newlines$who $path$gitbranch$level\n$bang"
}


export _NESTED_LEVEL=$(("$_NESTED_LEVEL"+1))
PS1=$(_makeprompt)
